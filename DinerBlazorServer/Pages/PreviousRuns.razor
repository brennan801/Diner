@page "/previousRuns"
@using DinerBlazorServer.Services
@using JCsDiner
@using Z.EntityFramework.Plus
@inject DinerDbContext dbContext

<h3>PreviousRuns</h3>

<label for="order">Order By:</label>
<select @bind="order" name="order">
    <option value="ID">ID</option>
    <option value="Name">Name</option>
    <option value="RunTime">Run Time</option>
    <option value="Parties"># Of Parties</option>
    <option value="Waiters"># Of Waiters</option>
    <option value="Cooks"># Of Cooks</option>
    <option value="Tables"># Of Tables</option>
    <option value="Entry">Entry Time</option>
    <option value="PartySize">Party Size</option>
</select>
<button @onclick="OrderResults">Order</button>

<table class="table">
  <thead>
    <tr>
      <th scope="col">ID</th>
      <th scope="col">Name</th>
      <th scope="col">RunTime</th>
      <th scope="col"># Of Parties</th>
      <th scope="col"># Of Waiters</th>
      <th scope="col"># Of Cooks</th>
      <th scope="col"># Of Tables</th>
      <th scope="col">Avg Party Entry Time</th>
      <th scope="col">Set Avg Party Size</th>
      <th scope="col">Actual Avg Party Size</th>
    </tr>
  </thead>
  <tbody>
        @foreach(SimulatorResults result in results)
        {
            <tr>
                <td>@result.ID</td>
                <td>@result.Name</td>
                <td>@result.Runtime</td>
                <td>@result.NumberOfCustomers</td>
                <td>@result.NumberOfWaiters</td>
                <td>@result.NumberOfCooks</td>
                <td>@result.NumberOfTables</td>
                <td>@result.AverageEntryTime</td>
                <td>@result.SetAveragePartySize</td>
                <td>@result.ActualAveragePartySize</td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<SimulatorResults> results = new();
    string order = "ID";

    protected override void OnInitialized()
    {
        dbContext.Results.Where(r => r.Runtime == 0).Delete();
        dbContext.SaveChanges();
        results = dbContext.Results.OrderBy(r => r.ID).ToList();
    }

    public void OrderResults()
    {
        if(order == "ID")
        {
            results = dbContext.Results.OrderBy(r => r.ID).ToList();
        }
        else if(order == "Name")
        {
            results = dbContext.Results.OrderBy(r => r.Name).ToList();
        }else if(order == "RunTime")
        {
            results = dbContext.Results.OrderBy(r => r.Runtime).ToList();
        }else if(order == "Parties")
        {
            results = dbContext.Results.OrderBy(r => r.NumberOfCustomers).ToList();
        }else if(order == "Waiters")
        {
            results = dbContext.Results.OrderBy(r => r.NumberOfWaiters).ToList();
        }else if(order == "Cooks")
        {
            results = dbContext.Results.OrderBy(r => r.NumberOfCooks).ToList();
        }else if(order == "Tables")
        {
            results = dbContext.Results.OrderBy(r => r.NumberOfTables).ToList();
        }else if(order == "Entry")
        {
            results = dbContext.Results.OrderBy(r => r.AverageEntryTime).ToList();
        }else if(order == "PartySize")
        {
            results = dbContext.Results.OrderBy(r => r.ActualAveragePartySize).ToList();
        }
        else
        {
            results = dbContext.Results.OrderBy(r => r.ID).ToList();
        }
    }
}
